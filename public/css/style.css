html{
    box-sizing: border-box;
    background-color: white;
}

body
{
    margin-inline: 0;
    margin-bottom: 0;
    overflow: hidden;
}

:root
{
    --board-size: 0px; /* Set by javascript :) */
    --board-animation-time: 1s;
    --squares-animation-time: 1s;
    --dark-theme: #2448a3;
    --light-theme: #ADD8E6;
}

@keyframes drop-in-animation {
    from {
        opacity: 0;
        transform: translate(var(--animation-translation));
    }
    to {
        opacity: 1;
        transform: translate(0);
    }
}

footer
{
    height: 2em;
    margin: 0;

    display: flex;
    background-color: var(--light-theme);
    justify-content: center;
    align-items: center;
    border-top: 2px solid black;
    border-bottom: 2px solid black;
 
    opacity: 0;
    --animation-translation: 0, 100%;
    will-change: transform;
    animation: drop-in-animation var(--board-animation-time) ease 
               calc(52 * var(--squares-animation-time)/15 + var(--board-animation-time) + 1s) 
               forwards;
}

.no-animation #info-area,
.no-animation #chessboard,
.no-animation .chess-cell,
.no-animation #chat-area,
.no-animation footer
{
    animation: none!important; 
    opacity: 1!important;
}

#main-area
{
    display: flex;
    flex-direction: row;
}

#main-area > *   
{
    flex: 1 1 auto; 
}

*, *::before, *::after{
    box-sizing: inherit;
}

.white
{
    background-color: #fffaf5;
    color: black;
}

.black
{
    background-color: var(--dark-theme);
    color: white;
}

.no-pad-mar
{
    padding: 0;
    margin: 0;
}

.force-overlap
{
    display: grid;
  
    /* Set horizontal alignment of items in, case they have a different width. */
    /* justify-items: start | end | center | stretch (default); */
    justify-items: start;
  
    /* Set vertical alignment of items, in case they have a different height. */
    /* align-items: start | end | center | stretch (default); */
    align-items: start;
}

/* Cause all descendents to be overlap */
.force-overlap > * {
    grid-column-start: 1;
    grid-row-start: 1;
}

.positions-area
{
    position: relative;
    width: 100%;
    height: 100%;
}

.positions
{
    position: absolute;
    font-size: 1vw;
    z-index: 0;
    font-weight: bold;
}

.supersleft
{  
    left: 0.2em;
    top: 0.2em; /* Since text is displayed in center of span, we need to translate it up */
}

.subsright
{
    right: 0.25em;
    bottom: 0.2em;
}

.captured-piece
{
    position: absolute;
    height: 100%;
}

.dragging-piece
{
    position: absolute;
    width: calc(var(--board-size)/7);
    z-index: 2;
}

.dragging-piece:hover
{
    cursor: grabbing;
}

.piece:hover
{
    cursor: grab;
}

table.noselect
{
    user-select: none;
}

table.no-spacing
{
    border-spacing: 0;
    border-collapse: collapse;
}


/* Give the table its proper shape */
#chessboard
{
    display: grid;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    width: 100%;
    border: 10px solid var(--light-theme);
    --animation-translation: 0%, -100%;
    animation: drop-in-animation var(--board-animation-time) ease;
}

.chess-cell {
    position: static;
    padding: 0;
    --animation-translation: 0%, 20%;
    animation: drop-in-animation var(--squares-animation-time) ease 
               calc(var(--animation-order) * var(--squares-animation-time)/15 + var(--board-animation-time));
    opacity: 0;
}

.piece
{
    width: 100%;
    height: 100%;
    position: static;
    z-index: 1;
}

.captured-cell
{
    height: calc(var(--board-size)/11);
    position: relative; /* For absolute position of captured pieces to work */
}

#game-area
{
    min-width: 400px;
    width: 205%;
}

#info-area
{
    flex: 1 1 90%; /* This seems to work best when adding padding */
    padding: 1rem;

    opacity: 0;
    will-change: transform;
    --animation-translation: -100%, 0%;
    animation: drop-in-animation var(--board-animation-time) ease 
               calc(52 * var(--squares-animation-time)/15 + var(--board-animation-time) + 1s) 
               forwards;
}

#keyboard-input
{
    width: 100%;
    display: none;
}

#keyboard-input:focus, #chat-input:focus
{
    outline-style: dashed;
    outline-color: blue;
}

#chat-area
{
    margin-inline: 1em;
    width: 100%;

    display: flex;
    justify-content: top;
    align-items: top;
    flex-direction: column


    opacity: 0;
    will-change: transform;
    --animation-translation: 100%, 0%;
    animation: drop-in-animation var(--board-animation-time) ease 
               calc(52 * var(--squares-animation-time)/15 + var(--board-animation-time) + 1s) 
               forwards;
}

#chat-form
{
    display: block;
    height: 30px;
    margin-bottom: 10%; 
    padding: 0;
    width: 100%;
}

#chat-input
{
    width: 100%;
    height: 100%;
}

#chat-textbox
{
    border: 4px solid black;
    background-color: white;
    width: 100%;
    height: var(--board-size);  
    overflow-y: scroll;
}


.overlay
{
    height: 100%;
    width: 0px;
    position: fixed;
    z-index: 3;
    left: 0;
    top: 0;
    background-color: var(--light-theme);
    backdrop-filter: blur(0.25em);
    overflow-x: hidden;
    transition: 0.5s;
}

.overlay-content
{
    font-size: 3em;
    font-weight: 400;
    position: relative;
    top: 30%;
    width: 100%;
    text-align: center;
    margin-top: 30px;
}

#close-button
{
    position: absolute;
    top: 20px;
    right: 40px;
    font-size: 60px;
    text-decoration: none;
    color: white;
    transition: 1s;
}

#close-button:hover
{
    color: rgb(163, 163, 255);
}

.hidden-checkbox
{
    display: none;
}

.checkbox-svg path:nth-child(1)
{
    fill: var(--dark-theme);
}

.checkbox-svg path:nth-child(2)
{
    fill: none;
}

.checkbox-svg defs linearGradient stop:nth-child(1)
{
    stop-color: var(--light-theme);
}

.hidden-checkbox:checked + .checkbox-svg path:nth-child(2)
{
    fill: url(#left-to-right);
}


